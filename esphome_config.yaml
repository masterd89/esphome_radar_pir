

esphome:
  name: "radar-pir-presence-detector-${SERIAL_NUMBER}"
  friendly_name: "Radar-PIR Presence detector"

external_components:
    - source:
        type: git
        url: https://github.com/muxa/esphome-state-machine

esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "+8jonemdJkdHIqO4tzgFWaj+NAeGg1/2yQM0/OC2gbw="

ota:
  - platform: esphome
    password: "100d8ca3a160b89e5f8af509a9218c63"

web_server:
   port: 80
   version: 3
   sorting_groups:
    - id: "sensori"
      name: "Sensori"
    - id: "uscite"
      name: "Uscite"
    - id: "stato"
      name: "Stato"
   

wifi:
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Radar-Pir-Board Fallback Hotspot"
    password: "axixpmZ2l3X4"

captive_portal:

########################
## SCRIPTS
########################
script:
  - id: "pir_off_delay"
    mode: restart
    then:
      - delay: 5s
      - state_machine.transition: PIR_cooldown_elapsed
  - id: "presence_retrigger_delay"
    mode: restart
    then:
      - delay: 10s
      - state_machine.transition: presence_retrigger_delay_elapsed
      


########################
## MAIN FSM DEFINITION
########################


state_machine:
  name: "main_sensor_fsm"
  states:
    - name: "no_presence"
      on_enter:
        then:
          - switch.turn_off: "PRESENCE_OUT_SW"
    - name: "pir_input"
      on_enter:
        then:
          - switch.turn_on: "PRESENCE_OUT_SW"
          - if:
              condition:
                - binary_sensor.is_on: MMWAVE_SENSOR
              then:
                - state_machine.transition: mmwave_sensor_on
    - name: "pir_cooldown"
      on_enter:
        then:
          - script.execute: pir_off_delay
          - if:
              condition:
                - binary_sensor.is_on: MMWAVE_SENSOR
              then:
                - state_machine.transition: mmwave_sensor_on
      on_leave:
        then:
          - script.stop: pir_off_delay
    - name: "mmwave_input"
      on_enter:
        then:
          - switch.turn_on: "PRESENCE_OUT_SW"
    - name: "presence_mmwave_retrigger"
      on_enter:
        then:
          - switch.turn_off: "PRESENCE_OUT_SW"
          - script.execute: presence_retrigger_delay
      on_leave:
        then:
          - script.stop: presence_retrigger_delay
  inputs:
    - name: PIR_on
      transitions:
        - no_presence -> pir_input
        - pir_cooldown -> pir_input
        - presence_mmwave_retrigger -> pir_input
    - name: PIR_off
      transitions:
        - pir_input -> pir_cooldown
    - name: PIR_cooldown_elapsed
      transitions:
        - pir_cooldown -> no_presence
    - name: mmwave_sensor_on
      transitions:
        - pir_input -> mmwave_input
        - pir_cooldown -> mmwave_input
        - presence_mmwave_retrigger -> mmwave_input
    - name: mmwave_sensor_off
      transitions:
        - mmwave_input -> presence_mmwave_retrigger
    - name: presence_retrigger_delay_elapsed
      transitions:
        - presence_mmwave_retrigger -> no_presence



text_sensor:
  - platform: state_machine
    name: "Sensor state"
    web_server:
      sorting_group_id: "stato"

binary_sensor:
  ########################
  ## MMWAVE_SENSOR
  ## Output from LD2412 sensor
  ## that signals the presence
  ## has been detected
  ########################

  - platform: gpio
    pin: GPIO20
    name: "MMWave Sensor"
    id: MMWAVE_SENSOR
    filters:
      - delayed_on: 10ms
      - delayed_off: 10ms
    on_press:
      then:
        - state_machine.transition: mmwave_sensor_on
    on_release:
      then:
        - state_machine.transition: mmwave_sensor_off
    web_server:
      sorting_group_id: "sensori"
 
  - platform: gpio
    name: "PIR Sensor"
    id: PIR_SENSOR
    pin: 
      number: 3
      mode:
        input: true
        pullup: true
      #inverted: True
    filters:
      - delayed_on: 100ms
      - delayed_off: 100ms
    on_press:
      then:
        - state_machine.transition: PIR_on
    on_release:
      then:
        - state_machine.transition: PIR_off
    web_server:
      sorting_group_id: "sensori"
    
  - platform: switch
    name: "Presence Detected"
    source_id: PRESENCE_OUT_SW
    web_server:
      sorting_group_id: "uscite"

output:
  - platform: gpio
    id: PRESENCE_OUT
    pin: GPIO21


switch:
  ########################
  ## PRESENCE OUT SWITCH
  ## Controls the output pin 
  ## that signals the presence
  ########################
  - platform: output
    output: PRESENCE_OUT
    id: PRESENCE_OUT_SW
    name: "Presence"
    internal: True
    restore_mode: DISABLED

  ################################################
  ## COOLDOWN delay switch
  ## When Presence Switch goes to 0, a cooldown period
  ## is started. During that period, if mmWave or PIR sensor
  ## are triggered the presence out is enabled again
  ################################################ 

  # - platform: template
  #   name: "Cooldown period enabled"
  #   internal: True
  #   restore_mode: DISABLED 

  ################################################
  ## COOLDOWN delay switch
  ## When Presence Switch goes to 0, a cooldown period
  ## is started. During that period, if mmWave or PIR sensor
  ## are triggered the presence out is enabled again
  ################################################ 

  # - platform: template
  #   name: "Cooldown Period"
  #   internal: True
  #   restore_mode: DISABLED 
    

########################
## FINITE STATE MACHINE DECLARATION
########################

# uart:
#   tx_pin: GPIO0
#   rx_pin: GPIO1
#   baud_rate: 256000
#   parity: NONE
#   stop_bits: 1
#   id: uart_bus
                                                                                                                                                                                                                                                                                   
# external_components:
#   - source:
#       type: git
#       url: https://github.com/screekworkshop/custom_components_support_for_screek_l12
#       ref: main
#     components: [esp32, uart, ld2412]

# ld2412:
#   id: ld2412_dev


# binary_sensor:
#   - platform: ld2412
#     has_target:
#       name: Presence
#     has_moving_target:
#       name: Moving Target
#     has_still_target:
#       name: Still Target

# sensor:
#   - platform: ld2412
#     moving_distance:
#       name : Moving Distance
#     still_distance:
#       name: Still Distance
#     moving_energy:
#       name: Move Energy
#     still_energy:
#       name: Still Energy
#     detection_distance:
#       name: Detection Distance
#     light:
#       name: light
#     g0:
#       move_energy:
#         name: g00 move energy
#       still_energy:
#         name: g00 still energy
#     g1:
#       move_energy:
#         name: g01 move energy
#       still_energy:
#         name: g01 still energy
#     g2:
#       move_energy:
#         name: g02 move energy
#       still_energy:
#         name: g02 still energy
#     g3:
#       move_energy:
#         name: g03 move energy
#       still_energy:
#         name: g03 still energy
#     g4:
#       move_energy:
#         name: g04 move energy
#       still_energy:
#         name: g04 still energy
#     g5:
#       move_energy:
#         name: g05 move energy
#       still_energy:
#         name: g05 still energy
#     g6:
#       move_energy:
#         name: g06 move energy
#       still_energy:
#         name: g06 still energy
#     g7:
#       move_energy:
#         name: g07 move energy
#       still_energy:
#         name: g07 still energy
#     g8:
#       move_energy:
#         name: g08 move energy
#       still_energy:
#         name: g08 still energy
#     g9:
#       move_energy:
#         name: g09 move energy
#       still_energy:
#         name: g09 still energy
#     g10:
#       move_energy:
#         name: g10 move energy
#       still_energy:
#         name: g10 still energy
#     g11:
#       move_energy:
#         name: g11 move energy
#       still_energy:
#         name: g11 still energy
#     g12:
#       move_energy:
#         name: g12 move energy
#       still_energy:
#         name: g12 still energy
#     g13:
#       move_energy:
#         name: g13 move energy
#       still_energy:
#         name: g13 still energy

# number:
#   - platform: LD2412
#     timeout:
#       name: "presence holding"
#     min_distance_gate:
#       name: "min distance gate"
#     max_distance_gate:
#       name: "max distance gate"
#     g0:
#       move_threshold:
#         name: g00 move threshold
#       still_threshold:
#         name: g00 still threshold
#     g1:
#       move_threshold:
#         name: g01 move threshold
#       still_threshold:
#         name: g01 still threshold
#     g2:
#       move_threshold:
#         name: g02 move threshold
#       still_threshold:
#         name: g02 still threshold
#     g3:
#       move_threshold:
#         name: g03 move threshold
#       still_threshold:
#         name: g03 still threshold
#     g4:
#       move_threshold:
#         name: g04 move threshold
#       still_threshold:
#         name: g04 still threshold
#     g5:
#       move_threshold:
#         name: g05 move threshold
#       still_threshold:
#         name: g05 still threshold
#     g6:
#       move_threshold:
#         name: g06 move threshold
#       still_threshold:
#         name: g06 still threshold
#     g7:
#       move_threshold:
#         name: g07 move threshold
#       still_threshold:
#         name: g07 still threshold
#     g8:
#       move_threshold:
#         name: g08 move threshold
#       still_threshold:
#         name: g08 still threshold
#     g9:
#       move_threshold:
#         name: g09 move threshold
#       still_threshold:
#         name: g09 still threshold
#     g10:
#       move_threshold:
#         name: g10 move threshold
#       still_threshold:
#         name: g10 still threshold
#     g11:
#       move_threshold:
#         name: g11 move threshold
#       still_threshold:
#         name: g11 still threshold
#     g12:
#       move_threshold:
#         name: g12 move threshold
#       still_threshold:
#         name: g12 still threshold
#     g13:
#       move_threshold:
#         name: g13 move threshold
#       still_threshold:
#         name: g13 still threshold
  
# select:
#   - platform: LD2412
#     out_pin_level:
#       name: 'Hardware output pin level'
#     distance_resolution:
#       name: 'Distance resolution'
#     baud_rate:
#       name: "baud rate"
#       on_value:
#         - delay: 3s
#         - lambda: |-
#             id(uart_bus).flush();
#             uint32_t new_baud_rate = stoi(x);
#             ESP_LOGD("change_baud_rate", "Changing baud rate from %i to %i",id(uart_bus).get_baud_rate(), new_baud_rate);
#             if (id(uart_bus).get_baud_rate() != new_baud_rate) {
#             id(uart_bus).set_baud_rate(new_baud_rate);
#             id(uart_bus).load_settings();
#             }
#     mode:
#       name: "Mode"
# button:
#   - platform: LD2412
#     factory_reset:
#       name: "factory reset"
#     restart:
#       name: "restart"
#     query_params:
#       name: query params

# text_sensor:
#   - platform: LD2412
#     version:
#       name: "firmware version"
#     mac_address:
#       name: "mac address"
# switch:
#   - platform: LD2412
#     bluetooth:
#       name: "Bluetooth"
